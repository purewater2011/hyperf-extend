<?php

declare(strict_types=1);
/**
 * This file is part of hyperf server projects.
 */
namespace Hyperf\Extend\Utils;


class StringUtil
{
    /**
     * 把逗号分隔的字符串转化为整型数组.
     * @return int[]
     */
    public static function convertCommaStringToIntArray(?string $str): array
    {
        if (empty($str)) {
            return [];
        }
        $str = str_replace('，', ',', $str);
        $ids = [];
        foreach (explode(',', $str) as $id) {
            if ($id === '') {
                continue;
            }
            $ids[] = intval($id);
        }
        return $ids;
    }

    /**
     * 是否包含中文字符.
     */
    public static function hasChineseCharacter(?string $string): bool
    {
        if (!$string) {
            return false;
        }
        $pattern = '/[\x{4e00}-\x{9fa5}]+/u';
        if (preg_match($pattern, $string)) {
            return true;
        }
        return false;
    }

    /**
     * 去除Emoji表情
     * 正则更新:https://github.com/joypixels/emoji-toolkit/blob/master/lib/php/src/JoyPixels.php
     * 注意1：unicode官方文档里面把#,* 0-9的码点标记为emoji了，正则来源代码中同样去除了[\x{0023}-\x{002a}],[\x{0030}-\x{0039}]\x{FE0F}注意删除
     * 注意2：有些使用了零等符号(200D)等，不能直接使用正则去除，需要按照顺序组合去除，因为阿拉伯语等语言中也会使用该特殊符号
     * 码点参考：https://unicode.org/Public/emoji/
     * 码点参考：https://zh.wikipedia.org/wiki/Unicode%E4%B8%80%E8%A6%BD%E8%A1%A8_1000-1FFF.
     * @param string $str 文本内容
     * @param string $replacement 连续表情被替换为空、空格等
     */
    public static function removeEmoji(string $str, $replacement = ' '): string
    {
        $temp_replacement = '😀'; //防止正常字符被替换
        $unicodeRegexp = '/(?:\x{1f9d1}[\x{1f3fb}-\x{1f3ff}]?\x{200d}\x{1f91d}\x{200d}\x{1f9d1}[\x{1f3fb}-\x{1f3ff}]?)|(?:[\x{1F3F3}|\x{1F3F4}]\x{FE0F}?\x{200D}?[\x{1F308}|\x{2620}]\x{FE0F}?)|(?:\x{1F441}\x{FE0F}?\x{200D}?\x{1F5E8}\x{FE0F}?)|(?:[\x{1f468}|\x{1f469}]\x{200d}\x{2764}\x{fe0f}?\x{200d}[\x{1f48b}\x{200d}]*[\x{1f468}|\x{1f469}])|(?:[\x{1f468}|\x{1f469}]\x{200d}[\x{1f468}|\x{1f469}]\x{200d}[\x{1f466}|\x{1f467}]\x{200d}[\x{1f466}|\x{1f467}])|(?:[\x{1f468}|\x{1f469}]\x{200d}[\x{1f466}|\x{1f467}]\x{200d}[\x{1f466}|\x{1f467}])|(?:[\x{1f468}|\x{1f469}]\x{200d}[\x{1f468}|\x{1f469}]\x{200d}[\x{1f466}|\x{1f467}])|(?:[\x{1f468}|\x{1f469}]\x{200d}[\x{1f466}|\x{1f467}])|(?:[\x{1F9B8}|\x{1F9B9}]+[\x{1F3FB}-\x{1F3FF}]?\x{200D}[\x{2640}-\x{2642}]?\x{FE0F}?)|(?:[\x{1F468}|\x{1F469}]+[\x{1F3FB}-\x{1F3FF}]?\x{200D}[\x{1F9B0}-\x{1F9B3}]+\x{FE0F}?)|[\x{0023}-\x{0039}]\x{FE0F}?\x{20e3}|(?:\x{1F3F4}[\x{E0060}-\x{E00FF}]{1,6})|[\x{1F1E0}-\x{1F1FF}]{2}|(?:[\x{1F468}|\x{1F469}]\x{FE0F}?[\x{1F3FB}-\x{1F3FF}]?\x{200D}?[\x{2695}|\x{2696}|\x{2708}|\x{1F4BB}|\x{1F4BC}|\x{1F527}|\x{1F52C}|\x{1F680}|\x{1F692}|\x{1F33E}|\x{1F3EB}|\x{1F3EC}|\x{1f373}|\x{1f393}|\x{1f3a4}|\x{1f3ed}|\x{1f3a8}]\x{FE0F}?)|[\x{1F468}-\x{1F469}\x{1F9D0}-\x{1F9DF}][\x{1F3FA}-\x{1F3FF}]?\x{200D}?[\x{2640}\x{2642}\x{2695}\x{2696}\x{2708}]?\x{FE0F}?|(?:[\x{1F9B5}|\x{1F9B6}]+[\x{1F3FB}-\x{1F3FF}]+)|(?:[\x{1f46e}\x{1F468}\x{1F469}\x{1f575}\x{1f471}-\x{1f487}\x{1F645}-\x{1F64E}\x{1F926}\x{1F937}]|[\x{1F460}-\x{1F482}\x{1F3C3}-\x{1F3CC}\x{26F9}\x{1F486}\x{1F487}\x{1F6A3}-\x{1F6B6}\x{1F938}-\x{1F93E}]|\x{1F46F})\x{FE0F}?[\x{1F3FA}-\x{1F3FF}]?\x{200D}?[\x{2640}\x{2642}]?\x{FE0F}?|(?:[\x{26F9}\x{261D}\x{270A}-\x{270D}\x{1F385}-\x{1F3CC}\x{1F442}-\x{1F4AA}\x{1F574}-\x{1F596}\x{1F645}-\x{1F64F}\x{1F6A3}-\x{1F6CC}\x{1F918}-\x{1F93E}]\x{FE0F}?[\x{1F3FA}-\x{1F3FF}])|(?:[\x{2194}-\x{2199}\x{21a9}-\x{21aa}]\x{FE0F}?|[\x{3030}\x{303d}]\x{FE0F}?|(?:[\x{1F170}-\x{1F171}]|[\x{1F17E}-\x{1F17F}]|\x{1F18E}|[\x{1F191}-\x{1F19A}]|[\x{1F1E6}-\x{1F1FF}])\x{FE0F}?|\x{24c2}\x{FE0F}?|[\x{3297}\x{3299}]\x{FE0F}?|(?:[\x{1F201}-\x{1F202}]|\x{1F21A}|\x{1F22F}|[\x{1F232}-\x{1F23A}]|[\x{1F250}-\x{1F251}])\x{FE0F}?|[\x{203c}\x{2049}]\x{FE0F}?|[\x{25aa}-\x{25ab}\x{25b6}\x{25c0}\x{25fb}-\x{25fe}]\x{FE0F}?|[\x{00a9}\x{00ae}]\x{FE0F}?|[\x{2122}\x{2139}]\x{FE0F}?|\x{1F004}\x{FE0F}?|[\x{2b05}-\x{2b07}\x{2b1b}-\x{2b1c}\x{2b50}\x{2b55}]\x{FE0F}?|[\x{231a}-\x{231b}\x{2328}\x{23cf}\x{23e9}-\x{23f3}\x{23f8}-\x{23fa}]\x{FE0F}?|\x{1F0CF}|[\x{2934}\x{2935}]\x{FE0F}?)|[\x{2700}-\x{27bf}]\x{FE0F}?|[\x{1F000}-\x{1F6FF}\x{1F900}-\x{1F9FF}]\x{FE0F}?|[\x{2600}-\x{26ff}]\x{FE0F}?|(?:[\x{1F466}-\x{1F469}]+\x{FE0F}?[\x{1F3FB}-\x{1F3FF}]?)/ui';
        $str = preg_replace($unicodeRegexp, $temp_replacement, $str);
        return preg_replace('/😀+/u', $replacement, $str);
    }

    /**
     * 将字符串中非标准英文字符转为标准字符.
     */
    public static function convertToStandardCharacter(string $word): string
    {
        $upper_a2z = [
            'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N',
            'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',
        ];
        $lower_a2z = [
            'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n',
            'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',
        ];

        $word = str_replace([
            'Ⓐ', 'Ⓑ', 'Ⓒ', 'Ⓓ', 'Ⓔ', 'Ⓕ', 'Ⓖ', 'Ⓗ', 'Ⓘ', 'Ⓙ', 'Ⓚ', 'Ⓛ', 'Ⓜ', 'Ⓝ',
            'Ⓞ', 'Ⓟ', 'Ⓠ', 'Ⓡ', 'Ⓢ', 'Ⓣ', 'Ⓤ', 'Ⓥ', 'Ⓦ', 'Ⓧ', 'Ⓨ', 'Ⓩ',
        ], $upper_a2z, $word);
        $word = str_replace([
            'ⓐ', 'ⓑ', 'ⓒ', 'ⓓ', 'ⓔ', 'ⓕ', 'ⓖ', 'ⓗ', 'ⓘ', 'ⓙ', 'ⓚ', 'ⓛ', 'ⓜ', 'ⓝ',
            'ⓞ', 'ⓟ', 'ⓠ', 'ⓡ', 'ⓢ', 'ⓣ', 'ⓤ', 'ⓥ', 'ⓦ', 'ⓧ', 'ⓨ', 'ⓩ',
        ], $lower_a2z, $word);
        $word = str_replace([
            '🅐', '🅑', '🅒', '🅓', '🅔', '🅕', '🅖', '🅗', '🅘', '🅙', '🅚', '🅛', '🅜', '🅝',
            '🅞', '🅟', '🅠', '🅡', '🅢', '🅣', '🅤', '🅥', '🅦', '🅧', '🅨', '🅩',
        ], $upper_a2z, $word);
        $word = str_replace([
            '🄰', '🄱', '🄲', '🄳', '🄴', '🄵', '🄶', '🄷', '🄸', '🄹', '🄺', '🄻', '🄼', '🄽',
            '🄾', '🄿', '🅀', '🅁', '🅂', '🅃', '🅄', '🅅', '🅆', '🅇', '🅈', '🅉',
        ], $upper_a2z, $word);
        $word = str_replace([
            '🅰', '🅱', '🅲', '🅳', '🅴', '🅵', '🅶', '🅷', '🅸', '🅹', '🅺', '🅻', '🅼', '🅽',
            '🅾', '🅿', '🆀', '🆁', '🆂', '🆃', '🆄', '🆅', '🆆', '🆇', '🆈', '🆉',
        ], $upper_a2z, $word);
        $word = str_replace([
            '🄐', '🄑', '🄒', '🄓', '🄔', '🄕', '🄖', '🄗', '🄘', '🄙', '🄚', '🄛', '🄜', '🄝',
            '🄞', '🄟', '🄠', '🄡', '🄢', '🄣', '🄤', '🄥', '🄦', '🄧', '🄨', '🄩',
        ], $upper_a2z, $word);
        $word = str_replace([
            '⒜', '⒝', '⒞', '⒟', '⒠', '⒡', '⒢', '⒣', '⒤', '⒥', '⒦', '⒧', '⒨', '⒩',
            '⒪', '⒫', '⒬', '⒭', '⒮', '⒯', '⒰', '⒱', '⒲', '⒳', '⒴', '⒵',
        ], $lower_a2z, $word);

        //U+1D400 - U+1D419
        $word = str_replace([
            '𝐀', '𝐁', '𝐂', '𝐃', '𝐄', '𝐅', '𝐆', '𝐇', '𝐈', '𝐉', '𝐊', '𝐋', '𝐌', '𝐍',
            '𝐎', '𝐏', '𝐐', '𝐑', '𝐒', '𝐓', '𝐔', '𝐕', '𝐖', '𝐗', '𝐘', '𝐙',
        ], $upper_a2z, $word);
        //U+1D41A - U+1D433
        $word = str_replace([
            '𝐚', '𝐛', '𝐜', '𝐝', '𝐞', '𝐟', '𝐠', '𝐡', '𝐢', '𝐣', '𝐤', '𝐥', '𝐦', '𝐧',
            '𝐨', '𝐩', '𝐪', '𝐫', '𝐬', '𝐭', '𝐮', '𝐯', '𝐰', '𝐱', '𝐲', '𝐳',
        ], $lower_a2z, $word);
        //U+1D434 - U+1D44D
        $word = str_replace([
            '𝐴', '𝐵', '𝐶', '𝐷', '𝐸', '𝐹', '𝐺', '𝐻', '𝐼', '𝐽', '𝐾', '𝐿', '𝑀', '𝑁',
            '𝑂', '𝑃', '𝑄', '𝑅', '𝑆', '𝑇', '𝑈', '𝑉', '𝑊', '𝑋', '𝑌', '𝑍',
        ], $upper_a2z, $word);
        //U+1D44E - U+1D467 (保留地址:h)
        $word = str_replace([
            '𝑎', '𝑏', '𝑐', '𝑑', '𝑒', '𝑓', '𝑔', '𝑕', '𝑖', '𝑗', '𝑘', '𝑙', '𝑚', '𝑛',
            '𝑜', '𝑝', '𝑞', '𝑟', '𝑠', '𝑡', '𝑢', '𝑣', '𝑤', '𝑥', '𝑦', '𝑧',
        ], $lower_a2z, $word);
        //U+1D468 - U+1D481
        $word = str_replace([
            '𝑨', '𝑩', '𝑪', '𝑫', '𝑬', '𝑭', '𝑮', '𝑯', '𝑰', '𝑱', '𝑲', '𝑳', '𝑴', '𝑵',
            '𝑶', '𝑷', '𝑸', '𝑹', '𝑺', '𝑻', '𝑼', '𝑽', '𝑾', '𝑿', '𝒀', '𝒁',
        ], $upper_a2z, $word);
        //U+1D482 - U+1D49B
        $word = str_replace([
            '𝒂', '𝒃', '𝒄', '𝒅', '𝒆', '𝒇', '𝒈', '𝒉', '𝒊', '𝒋', '𝒌', '𝒍', '𝒎', '𝒏',
            '𝒐', '𝒑', '𝒒', '𝒓', '𝒔', '𝒕', '𝒖', '𝒗', '𝒘', '𝒙', '𝒚', '𝒛',
        ], $lower_a2z, $word);
        //U+1D49C - U+1D4B5 (保留地址:B,E,F,H,I,L,M,R)
        $word = str_replace([
            '𝒜', '𝒝', '𝒞', '𝒟', '𝒠', '𝒡', '𝒢', '𝒣', '𝒤', '𝒥', '𝒦', '𝒧', '𝒨', '𝒩',
            '𝒪', '𝒫', '𝒬', '𝒭', '𝒮', '𝒯', '𝒰', '𝒱', '𝒲', '𝒳', '𝒴', '𝒵',
        ], $upper_a2z, $word);
        //U+1D4B6 - U+1D4CF (保留地址:e,g,o)
        $word = str_replace([
            '𝒶', '𝒷', '𝒸', '𝒹', '𝒺', '𝒻', '𝒼', '𝒽', '𝒾', '𝒿', '𝓀', '𝓁', '𝓂', '𝓃',
            '𝓄', '𝓅', '𝓆', '𝓇', '𝓈', '𝓉', '𝓊', '𝓋', '𝓌', '𝓍', '𝓎', '𝓏',
        ], $lower_a2z, $word);
        //U+1D4D0 - U+1D4E9
        $word = str_replace([
            '𝓐', '𝓑', '𝓒', '𝓓', '𝓔', '𝓕', '𝓖', '𝓗', '𝓘', '𝓙', '𝓚', '𝓛', '𝓜', '𝓝',
            '𝓞', '𝓟', '𝓠', '𝓡', '𝓢', '𝓣', '𝓤', '𝓥', '𝓦', '𝓧', '𝓨', '𝓩',
        ], $upper_a2z, $word);
        //U+1D4EA - U+1D503
        $word = str_replace([
            '𝓪', '𝓫', '𝓬', '𝓭', '𝓮', '𝓯', '𝓰', '𝓱', '𝓲', '𝓳', '𝓴', '𝓵', '𝓶', '𝓷',
            '𝓸', '𝓹', '𝓺', '𝓻', '𝓼', '𝓽', '𝓾', '𝓿', '𝔀', '𝔁', '𝔂', '𝔃',
        ], $lower_a2z, $word);
        //U+1D504 - U+1D51D (保留地址:C,H,I,R,Z)
        $word = str_replace([
            '𝔄', '𝔅', '𝔆', '𝔇', '𝔈', '𝔉', '𝔊', '𝔋', '𝔌', '𝔍', '𝔎', '𝔏', '𝔐', '𝔑',
            '𝔒', '𝔓', '𝔔', '𝔕', '𝔖', '𝔗', '𝔘', '𝔙', '𝔚', '𝔛', '𝔜', '𝔝',
        ], $upper_a2z, $word);
        //U+1D51E - U+1D537
        $word = str_replace([
            '𝔞', '𝔟', '𝔠', '𝔡', '𝔢', '𝔣', '𝔤', '𝔥', '𝔦', '𝔧', '𝔨', '𝔩', '𝔪', '𝔫',
            '𝔬', '𝔭', '𝔮', '𝔯', '𝔰', '𝔱', '𝔲', '𝔳', '𝔴', '𝔵', '𝔶', '𝔷',
        ], $lower_a2z, $word);
        //U+1D538 - U+1D551 (保留地址:C,H,N,P,Q,R,Z)
        $word = str_replace([
            '𝔸', '𝔹', '𝔺', '𝔻', '𝔼', '𝔽', '𝔾', '𝔿', '𝕀', '𝕁', '𝕂', '𝕃', '𝕄', '𝕅',
            '𝕆', '𝕇', '𝕈', '𝕉', '𝕊', '𝕋', '𝕌', '𝕍', '𝕎', '𝕏', '𝕐', '𝕑',
        ], $upper_a2z, $word);
        //U+1D552 - U+1D56B
        $word = str_replace([
            '𝕒', '𝕓', '𝕔', '𝕕', '𝕖', '𝕗', '𝕘', '𝕙', '𝕚', '𝕛', '𝕜', '𝕝', '𝕞', '𝕟',
            '𝕠', '𝕡', '𝕢', '𝕣', '𝕤', '𝕥', '𝕦', '𝕧', '𝕨', '𝕩', '𝕪', '𝕫',
        ], $lower_a2z, $word);
        //U+1D56C - U+1D585
        $word = str_replace([
            '𝕬', '𝕭', '𝕮', '𝕯', '𝕰', '𝕱', '𝕲', '𝕳', '𝕴', '𝕵', '𝕶', '𝕷', '𝕸', '𝕹',
            '𝕺', '𝕻', '𝕼', '𝕽', '𝕾', '𝕿', '𝖀', '𝖁', '𝖂', '𝖃', '𝖄', '𝖅',
        ], $upper_a2z, $word);
        //U+1D586 - U+1D59F
        $word = str_replace([
            '𝖆', '𝖇', '𝖈', '𝖉', '𝖊', '𝖋', '𝖌', '𝖍', '𝖎', '𝖏', '𝖐', '𝖑', '𝖒', '𝖓',
            '𝖔', '𝖕', '𝖖', '𝖗', '𝖘', '𝖙', '𝖚', '𝖛', '𝖜', '𝖝', '𝖞', '𝖟',
        ], $lower_a2z, $word);
        //U+1D5A0 - U+1D5B9
        $word = str_replace([
            '𝖠', '𝖡', '𝖢', '𝖣', '𝖤', '𝖥', '𝖦', '𝖧', '𝖨', '𝖩', '𝖪', '𝖫', '𝖬', '𝖭',
            '𝖮', '𝖯', '𝖰', '𝖱', '𝖲', '𝖳', '𝖴', '𝖵', '𝖶', '𝖷', '𝖸', '𝖹',
        ], $upper_a2z, $word);
        //U+1D5BA - U+1D5D3
        $word = str_replace([
            '𝖺', '𝖻', '𝖼', '𝖽', '𝖾', '𝖿', '𝗀', '𝗁', '𝗂', '𝗃', '𝗄', '𝗅', '𝗆', '𝗇',
            '𝗈', '𝗉', '𝗊', '𝗋', '𝗌', '𝗍', '𝗎', '𝗏', '𝗐', '𝗑', '𝗒', '𝗓',
        ], $lower_a2z, $word);
        //U+1D5D4 - U+1D5ED
        $word = str_replace([
            '𝗔', '𝗕', '𝗖', '𝗗', '𝗘', '𝗙', '𝗚', '𝗛', '𝗜', '𝗝', '𝗞', '𝗟', '𝗠', '𝗡',
            '𝗢', '𝗣', '𝗤', '𝗥', '𝗦', '𝗧', '𝗨', '𝗩', '𝗪', '𝗫', '𝗬', '𝗭',
        ], $upper_a2z, $word);
        //U+1D5EE - U+1D607
        $word = str_replace([
            '𝗮', '𝗯', '𝗰', '𝗱', '𝗲', '𝗳', '𝗴', '𝗵', '𝗶', '𝗷', '𝗸', '𝗹', '𝗺', '𝗻',
            '𝗼', '𝗽', '𝗾', '𝗿', '𝘀', '𝘁', '𝘂', '𝘃', '𝘄', '𝘅', '𝘆', '𝘇',
        ], $lower_a2z, $word);
        //U+1D608 - U+1D621
        $word = str_replace([
            '𝘈', '𝘉', '𝘊', '𝘋', '𝘌', '𝘍', '𝘎', '𝘏', '𝘐', '𝘑', '𝘒', '𝘓', '𝘔', '𝘕',
            '𝘖', '𝘗', '𝘘', '𝘙', '𝘚', '𝘛', '𝘜', '𝘝', '𝘞', '𝘟', '𝘠', '𝘡',
        ], $upper_a2z, $word);
        //U+1D622 - U+1D63B
        $word = str_replace([
            '𝘢', '𝘣', '𝘤', '𝘥', '𝘦', '𝘧', '𝘨', '𝘩', '𝘪', '𝘫', '𝘬', '𝘭', '𝘮', '𝘯',
            '𝘰', '𝘱', '𝘲', '𝘳', '𝘴', '𝘵', '𝘶', '𝘷', '𝘸', '𝘹', '𝘺', '𝘻',
        ], $lower_a2z, $word);
        //U+1D63C - U+1D655
        $word = str_replace([
            '𝘼', '𝘽', '𝘾', '𝘿', '𝙀', '𝙁', '𝙂', '𝙃', '𝙄', '𝙅', '𝙆', '𝙇', '𝙈', '𝙉',
            '𝙊', '𝙋', '𝙌', '𝙍', '𝙎', '𝙏', '𝙐', '𝙑', '𝙒', '𝙓', '𝙔', '𝙕',
        ], $upper_a2z, $word);
        //U+1D656 - U+1D66F
        $word = str_replace([
            '𝙖', '𝙗', '𝙘', '𝙙', '𝙚', '𝙛', '𝙜', '𝙝', '𝙞', '𝙟', '𝙠', '𝙡', '𝙢', '𝙣',
            '𝙤', '𝙥', '𝙦', '𝙧', '𝙨', '𝙩', '𝙪', '𝙫', '𝙬', '𝙭', '𝙮', '𝙯',
        ], $lower_a2z, $word);
        //U+1D670 - U+1D689
        $word = str_replace([
            '𝙰', '𝙱', '𝙲', '𝙳', '𝙴', '𝙵', '𝙶', '𝙷', '𝙸', '𝙹', '𝙺', '𝙻', '𝙼', '𝙽',
            '𝙾', '𝙿', '𝚀', '𝚁', '𝚂', '𝚃', '𝚄', '𝚅', '𝚆', '𝚇', '𝚈', '𝚉',
        ], $upper_a2z, $word);
        //U+1D68A - U+1D6A3
        return str_replace([
            '𝚊', '𝚋', '𝚌', '𝚍', '𝚎', '𝚏', '𝚐', '𝚑', '𝚒', '𝚓', '𝚔', '𝚕', '𝚖', '𝚗',
            '𝚘', '𝚙', '𝚚', '𝚛', '𝚜', '𝚝', '𝚞', '𝚟', '𝚠', '𝚡', '𝚢', '𝚣',
        ], $lower_a2z, $word);
    }

    /**
     * 隐藏邮箱和手机号等.
     */
    public static function hideStar(?string $str): ?string
    {
        if (empty($str)) {
            return $str;
        }
        if (strpos($str, '@')) {
            $email_array = explode('@', $str);
            $prev_str = (strlen($email_array[0]) < 4) ? '' : substr($str, 0, 3); //邮箱前缀
            $count = 0;
            $str = preg_replace('/([^@]+)@/', '***@', $str, -1, $count);
            $res = $prev_str . $str;
        } else {
            if (strlen($str) > 6) {
                $res = substr($str, 0, 3) . '***' . substr($str, -3);
            } elseif (strlen($str) > 3) {
                $res = substr($str, 0, 3) . '***';
            } else {
                $res = $str;
            }
        }
        return $res;
    }
}
